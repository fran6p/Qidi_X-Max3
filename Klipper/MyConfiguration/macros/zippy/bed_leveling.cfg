################################
######### MESH_CHECK ###########
################################
[gcode_macro MESH_CHECK]
description: Checks if a mesh exists to determine whether to create a new one
gcode:
    {% if printer.bed_mesh.profiles['default'] is defined %}
        BED_MESH_PROFILE LOAD='default' ; load mesh
    {% else %}
        BED_MESH_CALIBRATE ; generate new mesh
    {% endif %}

[gcode_macro _TEST_MESH]
gcode:
    {% set bed_mesh = printer.bed_mesh %}
    RESPOND MSG="Bed Mesh Profile: "{bed_mesh.profile_name}
    RESPOND MSG="Bed Mesh Min: {bed_mesh.mesh_min}"
    RESPOND MSG="Bed Mesh Max: {bed_mesh.mesh_max}"
    RESPOND MSG="Probe Matrix: {bed_mesh.probed_matrix}"
    RESPOND MSG="Mesh Matrix: {bed_mesh.mesh_matrix}"

[gcode_macro BED_LEVELING]
description: Start Bed Leveling
gcode:
  {% if 'PROBE_COUNT' in params|upper %}
    {% set get_count = ('PROBE_COUNT=' + params.PROBE_COUNT) %}
  {%else %}
    {% set get_count = "" %}
  {% endif %}
  {% set bed_temp = params.BED_TEMP|default(50)|float %}
  {% set hotend_temp = params.HOTEND_TEMP|default(140)|float %}
  {% set nozzle_clear_temp = params.NOZZLE_CLEAR_TEMP|default(240)|float %}
  SET_FILAMENT_SENSOR SENSOR=fila_sensor ENABLE=0
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}
  BED_MESH_CLEAR
  SET_VELOCITY_LIMIT ACCEL_TO_DECEL=5000
  BED_MESH_CALIBRATE {get_count}
  BED_MESH_OUTPUT
  {% set y_park = printer.toolhead.axis_maximum.y/2 %}
  {% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
  G1 X{x_park} Y{y_park} F10000
  TURN_OFF_HEATERS
  SET_FILAMENT_SENSOR SENSOR=filam ENABLE=1
  M84