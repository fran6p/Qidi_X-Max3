[gcode_macro PA_CAL]
# Pressure Advance Simple Test macro, using .4mm nozzle, bowden setup, stock Creality Extruder.
# Usage: PA_CAL BED=60 EXTRUDER=220 PA_MIN=0.4 PA_MAX=0.8
#        All parameters are optional
# First prints a line with current set PA, then prints 20 line segments
# starting with PA_MIN, each increasing up to PA_MAX.
# Based on http://realdeuce.github.io/Voron/PA/pressure_advance.html 
# and https://www.reddit.com/r/VORONDesign/comments/sjdiol/pressure_advance_testing_macro_klipper/
description: Tune Pressure Advance
gcode:
    {% set BED = params.BED|default(60)|float %}
    {% set EXTRUDER = params.EXTRUDER|default(220)|float %}
    {% set PA_MIN = params.PA_MIN|default(0.4)|float %}
    {% set PA_MAX = params.PA_MAX|default(0.8)|float %}
    {% set PA_STEP = (PA_MAX - PA_MIN) / 20 %}
    {% set Z_HEIGHT = 0.2 %}
    {% set e_rate = 0.04 %}  # mm of filament per mm of nozzle travel
    # Generated: 0346021233569262
    {% set x_section = 30 %}
    {% set e_section = e_rate * x_section %}
    {% set axis_max = printer.toolhead.axis_maximum %}

    {% set mid_x = axis_max.x|float / 2.0 %}
    {% set mid_y = axis_max.y|float / 2.0 %}

    {% set x_start = mid_x - (x_section * 2) | float %}
    {% set x_p1 = mid_x - x_section | float %}
    {% set x_p2 = mid_x + x_section | float %}
    {% set x_p3 = mid_x + (x_section * 2) | float %}

    {% set y_base = mid_y - 50 | float %}

    START_PRINT BED={BED} EXTRUDER={EXTRUDER}

    G21 ; Millimeter units
    G90 ; Absolute XYZ
    M83 ; Relative E
    SET_VELOCITY_LIMIT ACCEL=3000 ACCEL_TO_DECEL=1500
    G92 E0
    M106 S0 

    M117 Y Section = {y_section}
    G0 X{x_start} Y{y_base - 10} F{ 200 * 60 }  ; move to start position
    G0 Z{Z_HEIGHT} F{ 5 * 60 }                  ; move to layer height
    G1 E1 F{ 40 * 60 }                          ; un-retract
    G1 X{x_p1} E{ e_section }     F{ 15 * 60 }  ; print line part one
    G1 X{x_p2} E{ e_section * 2 } F{ 125 * 60 } ; print line part two
    G1 X{x_p3} E{ e_section  }     F{ 15 * 60 } ; print line part three
    G1 E-4 F{ 25 * 60 }                         ; retract
    G0 Z{Z_HEIGHT+2} F{ 5 * 60 }                ; Move above layer height  

    {% for i in range(0, 20) %}
        SET_PRESSURE_ADVANCE ADVANCE={PA_MIN + i * PA_STEP} ; set Pressure Advance
        M117 Testing Pressure Advance at: {PA_MIN + i * PA_STEP}
        G0 X{x_start} Y{y_base+(5*i)} F{ 200 * 60 }         ; move to start position
        G0 Z{Z_HEIGHT} F{ 5 * 60 }                          ; move to layer height
        G1 E4 F{ 40 * 60 }                                  ; un-retract
        G1 X{x_p1} E{ e_section }     F{ 15 * 60 }          ; print line part one
        G1 X{x_p2} E{ e_section * 2 } F{ 125 * 60 }         ; print line part two
        G1 X{x_p3} E{ e_section }     F{ 15 * 60 }          ; print line part three
        G1 E-4 F{ 25 * 60 }                                 ; retract
        G0 Z{Z_HEIGHT + 2} F{ 5 * 60 }                      ; Move above layer height  
    {% endfor %}
    #M117 PA_STEP was {PA_STEP}
    M117 Find best line and multiply it by ({PA_MIN} + line * {PA_STEP}) to find your PA setting.
    END_PRINT


# Below macros are from:
# author: zellneralex aka alexz#9990
# source: https://github.com/zellneralex/klipper_config/blob/master/pressure_advance.cfg

#####################################################################
#  Preperation 
#####################################################################
# copy this file in the same directory as your printer.cfg
# add 
#    [include pressure_advance.cfg]
# to your printer.cfg
#
# A [save_variables] block is needed since a printer save variable needs to be used to have it available after power up.
# You can skip this if you already have an [save_variables] config block
# e.g: 
#    [save_variables]
#    filename: /home/pi/printer_data/config/.variables.stb
# I like to hide that file as there is nothing in that should be modified by the user.
# Do a klipper restart after adding the stuff above
#
# After klipper is back you need define your first filament id e.g.
#   PRESSURE_ADVANCE_ADD FILAMENT=ABS
#
#####################################################################
#  Macro for the print start or filament gcode section of your slicer 
#####################################################################
# PRESSURE_ADVANCE_SELECT [FILAMENT=<id>] [NOZZLE=<value>] : Set pressure advanve and smooth 
# time for the different filaments and nozzles combinations. If no combo is found 
# the cfg values are used.
# 
# For SuperSlicer/PrusaSlicer this could look like
#    PRESSURE_ADVANCE_SELECT NOZZLE=[nozzle_diameter] FILAMENT=[filament_settings_id]
#
#####################################################################
#  Console ussage
#####################################################################
# PRESSURE_ADVANCE_LIST: List all pressure advanve and smooth 
# time for the different filaments and nozzles
# 
# PRESSURE_ADVANCE_ADD FILAMENT=<id> [NOZZLE=<value>] [PRESSURE_ADVANCE=<value>] [SMOOTH_TIME=<value>]:
# Add new filaments, or nozzle to an existing filament or change pa settings for
# for an existing filament nozzle combination.
# Nozzle is defaulted to 0.4 and preasure advance/smoth time to the cfg values if not defined at the call
# !!! Caution do not use special characters like äüö or anything else in the name !!!
#
# PRESSURE_ADVANCE_REMOVE FILAMENT=<id> [NOZZLE=<value>]: Remove a definition
# If FILAMENT/NOZZLE is defined then only the coresponding nozzle setup will removed otherwise the complete
# filament.
#
#####################################################################
[gcode_macro PRESSURE_ADVANCE_LIST]
description: List all filament pressure advance settings 
gcode:
    {% if not printer.save_variables.variables.pressure_advance %}
        {action_respond_info("PRESSURE ADVANCE: No filament defined ABORTED")}
    {% else %}
        {% set pa_dic = printer.save_variables.variables.pressure_advance %}
        {% set out = ["PRESSURE ADVANCE: Defined filaments"] %}
        {% for filament in pa_dic|sort(attribute='id') %}
        {% set _dummy = out.append("%s" % filament.id) %}
        {% for setup in filament.val|sort(attribute='nozzle') %}
            {% set _dummy = out.append("Nozzle: %1.02f | Pressure Advance: %1.03f | Smooth Time: %1.03f" % 
            (setup.nozzle, setup.pa, setup.st)) %}
        {% endfor %}
        {% endfor %}
        {action_respond_info(out|join("\n"))}
    {% endif %}

[gcode_macro PRESSURE_ADVANCE_ADD]
description: Add or change pressure advance settings
gcode:
    {% if 'FILAMENT' not in params|upper %}
        {action_respond_info("PRESSURE ADVANCE: FILAMENT must be defined use \"PRESSURE_ADVANCE_ADD FILAMENT=id\" as a minimum")}
    {% else %}
        {% set cfg = printer.configfile.settings.extruder %}
        {% set id = params.FILAMENT|string %}
        {% set nozzle = params.NOZZLE|default(0.40)|float|round(2) %}
        {% if not printer.save_variables.variables.pressure_advance %} # add first entry
        {action_respond_info("PRESSURE ADVANCE: Initialize with Filament %s" % (id))}
        {% set pa_dic = [{'id' : id, 
                            'val': [{'nozzle': nozzle, 
                            'pa'    : params.PRESSURE_ADVANCE|default(cfg.pressure_advance)|float|round(3), 
                            'st'    : params.SMOOTH_TIME|default(cfg.pressure_advance_smooth_time)|float|round(3)}]}] %}
        {% else %}
        {% set pa_dic = printer.save_variables.variables.pressure_advance %}
        {% for filament in pa_dic %}
            {% if id == filament.id %}
            {% set id_index = loop.index0 %}
            {% for setup in filament.val %}
                {% if nozzle == setup.nozzle %} # change value of an existing nozzle st an existing filament
                {% set change_txt = [] %}
                {% if 'PRESSURE_ADVANCE' in params|upper %}
                    {% set _dummy = change_txt.append("PRESSURE ADVANCE") %}
                    {% set _dummy = pa_dic[id_index].val[loop.index0].update({'pa': params.PRESSURE_ADVANCE|float|round(3)}) %}
                {% endif %}
                {% if 'SMOOTH_TIME' in params|upper %}
                    {% set _dummy = change_txt.append("SMOOTH TIME") %}
                    {% set _dummy = pa_dic[id_index].val[loop.index0].update({'st': params.SMOOTH_TIME|float|round(3)}) %}
                {% endif %}
                {% if change_txt|length > 0 %}
                    {action_respond_info("PRESSURE ADVANCE: Changed %s at Filament %s Nozzle %s" % (change_txt|join(" and "),id,nozzle))}
                {% else %}
                    {action_respond_info("PRESSURE ADVANCE: Nothing changed at Filament %s Nozzle %s" % (id,nozzle))}
                {% endif %}
                {% elif loop.last %} # add a new nozzle to an existing filament
                {action_respond_info("PRESSURE ADVANCE: Add setup for Nozzle %s at Filament %s" % (nozzle,id))}
                {% set _dummy = pa_dic[id_index].val.append({'nozzle': nozzle, 
                                                            'pa'    : params.PRESSURE_ADVANCE|default(cfg.pressure_advance)|float|round(3), 
                                                            'st'    : params.SMOOTH_TIME|default(cfg.pressure_advance_smooth_time)|float|round(3)}) %}
                {% endif%}
            {% endfor %}
            {% elif loop.last %} # add a new filament
            {action_respond_info("PRESSURE ADVANCE: Add setup for Filament %s" % (id))}
            {% set _dummy = pa_dic.append({'id' : id, 
                                            'val': [{'nozzle': nozzle, 
                                            'pa'    : params.PRESSURE_ADVANCE|default(cfg.pressure_advance)|float|round(3), 
                                            'st'    : params.SMOOTH_TIME|default(cfg.pressure_advance_smooth_time)|float|round(3)}]}) %}
            {% endif %}
        {% endfor %}
        {% endif %}
        SAVE_VARIABLE VARIABLE=pressure_advance VALUE="{pa_dic}"
    {% endif %}

[gcode_macro PRESSURE_ADVANCE_REMOVE]
description: Remove a filament or a nezzle setup
gcode:
    {% if 'FILAMENT' not in params|upper %}
        {action_respond_info("PRESSURE ADVANCE: FILAMENT must be defined use \"PRESSURE_ADVANCE_REMOVE FILAMENT=id\" as a minimum")}
    {% else %}
        {% if not printer.save_variables.variables.pressure_advance %} # nothing setup'ed yet
        {action_respond_info("PRESSURE ADVANCE: Nothing to remove, no save_variable defined yet")}
        {% else %}
        {% set id = params.FILAMENT|string %}
        {% set pa_dic = printer.save_variables.variables.pressure_advance %}
        {% for filament in pa_dic %}
            {% if id == filament.id %}
            {% if 'NOZZLE' in params|upper %}
                {% set nozzle = params.NOZZLE|float|round(2) %}
                {% set id_index = loop.index0 %}
                {% for setup in filament.val %}
                {% if nozzle == setup.nozzle %} # remove nozzle
                    {action_respond_info("PRESSURE ADVANCE: Remove Nozzle %s at Filament %s" % (nozzle,id))}
                    {% set _dummy = pa_dic[id_index].val.pop(loop.index0) %}
                {% elif loop.last %} # nozzle not found
                    {action_respond_info("PRESSURE ADVANCE: Nothing to remove, Nozzle %s at Filament %s not defined" % (nozzle,id))}
                {% endif%}
                {% endfor %}
            {% else %} # remove filament
                {action_respond_info("PRESSURE ADVANCE: Remove Filament %s" % id)}
                {% set _dummy = pa_dic.pop(loop.index0) %}
            {% endif %}
            {% elif loop.last %} # filament not found
            {action_respond_info("PRESSURE ADVANCE: Nothing to remove, Filament %s not defined" % id)}
            {% endif %}
        {% endfor %}
        {% endif %}
        SAVE_VARIABLE VARIABLE=pressure_advance VALUE="{pa_dic}"
    {% endif %}

[gcode_macro PRESSURE_ADVANCE_SELECT]
description: Set PA depending on nozzle and filament 
gcode:
    {% if not printer.save_variables.variables.pressure_advance %}
        {action_respond_info("PRESSURE ADVANCE: No filament defined ABORTED")}
    {% else %}
        {% set nozzle = params.NOZZLE|default(0.4)|float %}
        {% set id = params.FILAMENT|default('None')|string %}
        {% set pa_dic = printer.save_variables.variables.pressure_advance %}
        {% set found = {'id'    : 'default',
                        'nozzle': 0.4,
                        'pa'    : printer.configfile.settings.extruder.pressure_advance,
                        'st'    : printer.configfile.settings.extruder.pressure_advance_smooth_time} %}
        {% for filament in pa_dic %}
        {% if id == filament.id %}
            {% for setup in filament.val %}
            {% if nozzle == setup.nozzle %}
                {% set _dummy = found.update({'id': filament.id}) %}
                {% set _dummy = found.update({'nozzle': setup.nozzle}) %}
                {% set _dummy = found.update({'pa': setup.pa}) %}
                {% set _dummy = found.update({'st': setup.st}) %}
            {% endif %}
            {% endfor %}
        {% endif %}
        {% endfor %}
        SET_PRESSURE_ADVANCE ADVANCE={found.pa} SMOOTH_TIME={found.st}
        {action_respond_info("LOADED PRESSURE ADVANCE:
                            Filament: %s   Nozzle: %1.02f
                            Pressure Advance: %1.03f Smooth Time: %1.03f" % (found.id, found.nozzle, found.pa, found.st))}
    {% endif %}
